openapi: "3.0.1"
info:
  version: "1.0.0"
  title: "ONG-OT157"
servers:
  - url: "http://localhost:3000/"
tags:
- name: "Categories"
  description: "Get category names"
components:
  schemas:
    Category:
      type: object
      required: ["name"]
      properties:
        id:
          type: integer
        name:
          type: string
          description: "Category name"
        description:
          type: string
          description: "Category description"
        image:
          type: string
          description: "Category image"
        created_at:
          type: string
          description: "Category creation date"
        updated_at:
          type: string
          description: "Category update date"
        deleted_at:
          type: string
          description: "Category deletion date"
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: token
security:
  - ApiKeyAuth: []
      
paths:
  /categories:
    get:
      tags:
      - "Categories"
      summary: "Find categories sorted by page"
      description: "Returns a list of ten category names sorted by page, starting with page 1 and returns 
        the previus and next page links according the page number you're currently on."
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Category"
                example:
                - previusPage: "http://localhost:3000/categories?page=1"
                  nextPage: "http://localhost:3000/categories?page=2"
                - name: "Category 1"
                - name: "Category 2"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
    post:
      tags:
      - "Categories"
      summary: "Create category"
      description: "Creates a new category"
      requestBody:
        description: "Category object that needs to be added"
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: "Category name"
                description:
                  type: string
                  description: "Category description"
                image:
                  type: string
                  description: "Category image"
        required: true
      responses:
        201:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  /categories/{categoryId}:
    get:
      tags:
      - "Categories"
      summary: "Find category by id"
      description: "Returns a category by id"
      produces:
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "Category id"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Category"
                example:
                - id: 1
                  name: "Category 1"
                  description: "Category 1 description"
                  image: "http://localhost:3000/images/category1.jpg"
                  created_at: "2020-01-01 00:00:00"
                  updated_at: "2020-01-01 00:00:00"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
    put:
      tags:
      - "Categories"
      summary: "Update category"
      description: "Updates a category"
      produces:
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "Category id"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Category object that needs to be updated"
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: "Category name"
                description:
                  type: string
                  description: "Category description"
                image:
                  type: string
                  description: "Category image"
        required: true
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Category"
                example:
                - id: 1
                  name: "Category 1"
                  description: "Category 1 description"
                  image: "http://localhost:3000/images/category1.jpg"
                  created_at: "2020-01-01 00:00:00"
                  updated_at: "2020-01-01 00:00:00"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
    delete:
      tags:
      - "Categories"
      summary: "Delete category"
      description: "Deletes a category"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "Category id"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                example:
                  message: "Category deleted"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"

    

        

      



